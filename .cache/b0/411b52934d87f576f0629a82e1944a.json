{"id":"QvJ0","dependencies":[{"name":"C:\\Users\\jnaed\\OneDrive\\Documents\\GitHub\\Scale_Generator\\node_modules\\@tonaljs\\chord-detect\\dist\\index.es.js.map","includedInParent":true,"mtime":1641144948573},{"name":"C:\\Users\\jnaed\\OneDrive\\Documents\\GitHub\\Scale_Generator\\package.json","includedInParent":true,"mtime":1641160005759},{"name":"C:\\Users\\jnaed\\OneDrive\\Documents\\GitHub\\Scale_Generator\\node_modules\\@tonaljs\\chord-detect\\package.json","includedInParent":true,"mtime":1641144948573},{"name":"@tonaljs/chord-type","loc":{"line":1,"column":20},"parent":"C:\\Users\\jnaed\\OneDrive\\Documents\\GitHub\\Scale_Generator\\node_modules\\@tonaljs\\chord-detect\\dist\\index.es.js","resolved":"C:\\Users\\jnaed\\OneDrive\\Documents\\GitHub\\Scale_Generator\\node_modules\\@tonaljs\\chord-type\\dist\\index.es.js"},{"name":"@tonaljs/core","loc":{"line":2,"column":21},"parent":"C:\\Users\\jnaed\\OneDrive\\Documents\\GitHub\\Scale_Generator\\node_modules\\@tonaljs\\chord-detect\\dist\\index.es.js","resolved":"C:\\Users\\jnaed\\OneDrive\\Documents\\GitHub\\Scale_Generator\\node_modules\\@tonaljs\\core\\dist\\index.es.js"},{"name":"@tonaljs/pcset","loc":{"line":3,"column":22},"parent":"C:\\Users\\jnaed\\OneDrive\\Documents\\GitHub\\Scale_Generator\\node_modules\\@tonaljs\\chord-detect\\dist\\index.es.js","resolved":"C:\\Users\\jnaed\\OneDrive\\Documents\\GitHub\\Scale_Generator\\node_modules\\@tonaljs\\pcset\\dist\\index.es.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=void 0,exports.detect=n;var e=require(\"@tonaljs/chord-type\"),t=require(\"@tonaljs/core\"),r=require(\"@tonaljs/pcset\");const o=e=>{const r=e.reduce((e,r)=>{const o=(0,t.note)(r).chroma;return void 0!==o&&(e[o]=e[o]||(0,t.note)(r).name),e},{});return e=>r[e]};function n(e){const r=e.map(e=>(0,t.note)(e).pc).filter(e=>e);return 0===t.note.length?[]:s(r,1).filter(e=>e.weight).sort((e,t)=>t.weight-e.weight).map(e=>e.name)}function s(n,s){const a=n[0],c=(0,t.note)(a).chroma,i=o(n),u=(0,r.modes)(n,!1),h=[];return u.forEach((t,r)=>{(0,e.all)().filter(e=>e.chroma===t).forEach(e=>{const t=e.aliases[0],o=i(r);r!==c?h.push({weight:.5*s,name:`${o}${t}/${a}`}):h.push({weight:1*s,name:`${o}${t}`})})}),h}var a={detect:n};exports.default=a;"},"sourceMaps":{"js":{"mappings":[],"sources":{},"lineCount":null}},"error":null,"hash":"b9e99ef6a91173047d1aed24c0cf4963","cacheData":{"env":{}}}